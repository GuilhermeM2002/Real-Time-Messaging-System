/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package br.com.challenges.message.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class MessageAvro extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 4953194256153459297L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"MessageAvro\",\"namespace\":\"br.com.challenges.message.avro\",\"fields\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"whoSend\",\"type\":\"string\"},{\"name\":\"whoReceive\",\"type\":\"string\"},{\"name\":\"content\",\"type\":\"string\"},{\"name\":\"date\",\"type\":{\"type\":\"int\",\"logicalType\":\"date\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();
static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.DateConversion());
  }

  private static final BinaryMessageEncoder<MessageAvro> ENCODER =
      new BinaryMessageEncoder<MessageAvro>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<MessageAvro> DECODER =
      new BinaryMessageDecoder<MessageAvro>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<MessageAvro> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<MessageAvro> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<MessageAvro> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<MessageAvro>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this MessageAvro to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a MessageAvro from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a MessageAvro instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static MessageAvro fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence id;
   private java.lang.CharSequence whoSend;
   private java.lang.CharSequence whoReceive;
   private java.lang.CharSequence content;
   private java.time.LocalDate date;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public MessageAvro() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param whoSend The new value for whoSend
   * @param whoReceive The new value for whoReceive
   * @param content The new value for content
   * @param date The new value for date
   */
  public MessageAvro(java.lang.CharSequence id, java.lang.CharSequence whoSend, java.lang.CharSequence whoReceive, java.lang.CharSequence content, java.time.LocalDate date) {
    this.id = id;
    this.whoSend = whoSend;
    this.whoReceive = whoReceive;
    this.content = content;
    this.date = date;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return whoSend;
    case 2: return whoReceive;
    case 3: return content;
    case 4: return date;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      null,
      null,
      null,
      null,
      new org.apache.avro.data.TimeConversions.DateConversion(),
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.CharSequence)value$; break;
    case 1: whoSend = (java.lang.CharSequence)value$; break;
    case 2: whoReceive = (java.lang.CharSequence)value$; break;
    case 3: content = (java.lang.CharSequence)value$; break;
    case 4: date = (java.time.LocalDate)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.CharSequence getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'whoSend' field.
   * @return The value of the 'whoSend' field.
   */
  public java.lang.CharSequence getWhoSend() {
    return whoSend;
  }


  /**
   * Sets the value of the 'whoSend' field.
   * @param value the value to set.
   */
  public void setWhoSend(java.lang.CharSequence value) {
    this.whoSend = value;
  }

  /**
   * Gets the value of the 'whoReceive' field.
   * @return The value of the 'whoReceive' field.
   */
  public java.lang.CharSequence getWhoReceive() {
    return whoReceive;
  }


  /**
   * Sets the value of the 'whoReceive' field.
   * @param value the value to set.
   */
  public void setWhoReceive(java.lang.CharSequence value) {
    this.whoReceive = value;
  }

  /**
   * Gets the value of the 'content' field.
   * @return The value of the 'content' field.
   */
  public java.lang.CharSequence getContent() {
    return content;
  }


  /**
   * Sets the value of the 'content' field.
   * @param value the value to set.
   */
  public void setContent(java.lang.CharSequence value) {
    this.content = value;
  }

  /**
   * Gets the value of the 'date' field.
   * @return The value of the 'date' field.
   */
  public java.time.LocalDate getDate() {
    return date;
  }


  /**
   * Sets the value of the 'date' field.
   * @param value the value to set.
   */
  public void setDate(java.time.LocalDate value) {
    this.date = value;
  }

  /**
   * Creates a new MessageAvro RecordBuilder.
   * @return A new MessageAvro RecordBuilder
   */
  public static br.com.challenges.message.avro.MessageAvro.Builder newBuilder() {
    return new br.com.challenges.message.avro.MessageAvro.Builder();
  }

  /**
   * Creates a new MessageAvro RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new MessageAvro RecordBuilder
   */
  public static br.com.challenges.message.avro.MessageAvro.Builder newBuilder(br.com.challenges.message.avro.MessageAvro.Builder other) {
    if (other == null) {
      return new br.com.challenges.message.avro.MessageAvro.Builder();
    } else {
      return new br.com.challenges.message.avro.MessageAvro.Builder(other);
    }
  }

  /**
   * Creates a new MessageAvro RecordBuilder by copying an existing MessageAvro instance.
   * @param other The existing instance to copy.
   * @return A new MessageAvro RecordBuilder
   */
  public static br.com.challenges.message.avro.MessageAvro.Builder newBuilder(br.com.challenges.message.avro.MessageAvro other) {
    if (other == null) {
      return new br.com.challenges.message.avro.MessageAvro.Builder();
    } else {
      return new br.com.challenges.message.avro.MessageAvro.Builder(other);
    }
  }

  /**
   * RecordBuilder for MessageAvro instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<MessageAvro>
    implements org.apache.avro.data.RecordBuilder<MessageAvro> {

    private java.lang.CharSequence id;
    private java.lang.CharSequence whoSend;
    private java.lang.CharSequence whoReceive;
    private java.lang.CharSequence content;
    private java.time.LocalDate date;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(br.com.challenges.message.avro.MessageAvro.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.whoSend)) {
        this.whoSend = data().deepCopy(fields()[1].schema(), other.whoSend);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.whoReceive)) {
        this.whoReceive = data().deepCopy(fields()[2].schema(), other.whoReceive);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.content)) {
        this.content = data().deepCopy(fields()[3].schema(), other.content);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.date)) {
        this.date = data().deepCopy(fields()[4].schema(), other.date);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
    }

    /**
     * Creates a Builder by copying an existing MessageAvro instance
     * @param other The existing instance to copy.
     */
    private Builder(br.com.challenges.message.avro.MessageAvro other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.whoSend)) {
        this.whoSend = data().deepCopy(fields()[1].schema(), other.whoSend);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.whoReceive)) {
        this.whoReceive = data().deepCopy(fields()[2].schema(), other.whoReceive);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.content)) {
        this.content = data().deepCopy(fields()[3].schema(), other.content);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.date)) {
        this.date = data().deepCopy(fields()[4].schema(), other.date);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.CharSequence getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public br.com.challenges.message.avro.MessageAvro.Builder setId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public br.com.challenges.message.avro.MessageAvro.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'whoSend' field.
      * @return The value.
      */
    public java.lang.CharSequence getWhoSend() {
      return whoSend;
    }


    /**
      * Sets the value of the 'whoSend' field.
      * @param value The value of 'whoSend'.
      * @return This builder.
      */
    public br.com.challenges.message.avro.MessageAvro.Builder setWhoSend(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.whoSend = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'whoSend' field has been set.
      * @return True if the 'whoSend' field has been set, false otherwise.
      */
    public boolean hasWhoSend() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'whoSend' field.
      * @return This builder.
      */
    public br.com.challenges.message.avro.MessageAvro.Builder clearWhoSend() {
      whoSend = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'whoReceive' field.
      * @return The value.
      */
    public java.lang.CharSequence getWhoReceive() {
      return whoReceive;
    }


    /**
      * Sets the value of the 'whoReceive' field.
      * @param value The value of 'whoReceive'.
      * @return This builder.
      */
    public br.com.challenges.message.avro.MessageAvro.Builder setWhoReceive(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.whoReceive = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'whoReceive' field has been set.
      * @return True if the 'whoReceive' field has been set, false otherwise.
      */
    public boolean hasWhoReceive() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'whoReceive' field.
      * @return This builder.
      */
    public br.com.challenges.message.avro.MessageAvro.Builder clearWhoReceive() {
      whoReceive = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'content' field.
      * @return The value.
      */
    public java.lang.CharSequence getContent() {
      return content;
    }


    /**
      * Sets the value of the 'content' field.
      * @param value The value of 'content'.
      * @return This builder.
      */
    public br.com.challenges.message.avro.MessageAvro.Builder setContent(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.content = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'content' field has been set.
      * @return True if the 'content' field has been set, false otherwise.
      */
    public boolean hasContent() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'content' field.
      * @return This builder.
      */
    public br.com.challenges.message.avro.MessageAvro.Builder clearContent() {
      content = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'date' field.
      * @return The value.
      */
    public java.time.LocalDate getDate() {
      return date;
    }


    /**
      * Sets the value of the 'date' field.
      * @param value The value of 'date'.
      * @return This builder.
      */
    public br.com.challenges.message.avro.MessageAvro.Builder setDate(java.time.LocalDate value) {
      validate(fields()[4], value);
      this.date = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'date' field has been set.
      * @return True if the 'date' field has been set, false otherwise.
      */
    public boolean hasDate() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'date' field.
      * @return This builder.
      */
    public br.com.challenges.message.avro.MessageAvro.Builder clearDate() {
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public MessageAvro build() {
      try {
        MessageAvro record = new MessageAvro();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.whoSend = fieldSetFlags()[1] ? this.whoSend : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.whoReceive = fieldSetFlags()[2] ? this.whoReceive : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.content = fieldSetFlags()[3] ? this.content : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.date = fieldSetFlags()[4] ? this.date : (java.time.LocalDate) defaultValue(fields()[4]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<MessageAvro>
    WRITER$ = (org.apache.avro.io.DatumWriter<MessageAvro>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<MessageAvro>
    READER$ = (org.apache.avro.io.DatumReader<MessageAvro>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










